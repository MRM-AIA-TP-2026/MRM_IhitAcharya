<?xml version = "1.0"?>
<robot>

<gazebo reference = "base_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Black</material>
</gazebo>



<gazebo reference = "left_front_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/White</material>
</gazebo>


<gazebo reference = "left_back_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/White</material>
</gazebo>



<gazebo reference = "right_front_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/White</material>
</gazebo>


<gazebo reference = "right_back_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/White</material>
</gazebo>


<gazebo reference = "gps_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Yellow</material>
</gazebo>


<gazebo reference = "camera_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Blue</material>
</gazebo>


<gazebo reference = "lidar_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Blue</material>
 
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>





</gazebo>



<gazebo reference = "imu_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Green</material>
</gazebo>

<gazebo>
<plugin name = 'skid_steer_drive' filename = 'libgazebo_ros_diff_drive.so'>
<ros>
<namespace></namespace>
</ros>
<num_wheel_pairs>2</num_wheel_pairs>



<left_joint>left_front_wheel_joint</left_joint>
<right_joint>right_back_wheel_joint</right_joint>
<wheel_seperation value = "1.05"/>


<left_joint>left_back_wheel_joint</left_joint>
<right_joint>right_front_wheel_joint</right_joint>
<wheel_seperation value = "1.05"/>


<wheel_diameter>0.15</wheel_diameter>
<wheel_diameter>0.15</wheel_diameter>

<max_wheel_torque>1000</max_wheel_torque>
<max_wheel_acceleration>5.0</max_wheel_acceleration>


<publish_odom>true</publish_odom>
<publish_odom_tf>true</publish_odom_tf>
<publish_wheel_tf>true</publish_wheel_tf>
<odom_publish_frequency>1</odom_publish_frequency>

<odometry_frame>odom</odometry_frame>
<robot_base_frame>dummy</robot_base_frame>

</plugin>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>$10</updateRate>



<left_joint>left_front_wheel_joint</left_joint>
<right_joint>right_back_wheel_joint</right_joint>
<wheel_seperation value = "1.05"/>


<left_joint>left_back_wheel_joint</left_joint>
<right_joint>right_front_wheel_joint</right_joint>
<wheel_seperation value = "1.05"/>


    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to cmd_vel -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to odom -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to odom -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to base_footprint -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>


    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>




<!-- hokuyo -->
  <gazebo reference="lidar_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
  </gazebo>



</robot>